LeetCode 題型 分析

Two Sum

  HashMap的應用與基本的算法思維。
  
  解法一：暴力法（Brute Force）
  遍歷所有的兩數組合，判斷是否為 target。
  
  解法二：哈希表（Hash Map / Dictionary）
  在遍歷陣列的同時，用哈希表記錄已經看過的數字及其索引。
  對於每個數字 x，計算 target - x = y，然後檢查 y 是否已存在於哈希表中，如果有，就找到了答案。
  
  面試可能問題?
  
  如果 input 很大怎麼處理？   
    外部排序、分段處理、streaming
  陣列是排序好的?
    雙指針（two pointer）
  找出所有符合條件的配對?
    set + hashMap 去重配對
  元素可重複使用（不限次數）
    Backtracking / DP
  資料是 stream
    HashSet 動態檢查
  找出所有配對組合
    記錄索引 + 避免重複配對
  元素重複怎麼辦？
    儲存數值對應所有索引
  可以用同一元素兩次嗎？
    要明確判斷是否同 index
  多次查詢 target 值怎麼處理？
    預處理 + 快速查找結構
  多維度延伸（如 3 Sum、4 Sum）
    排序 + 雙指針 + 去重
	
Two Sum 題型的核心能力
   查找匹配 (Lookup)
   快速比對 (Match)
   空間換時間
   資料去重 + 查找
   
進階問題的底層邏輯

  搜尋系統
  推薦系統
  圖論匹配
  資料壓縮演算法
  
